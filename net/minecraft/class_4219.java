package net.minecraft;

import com.google.common.base.Joiner;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.Maps;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.util.List;
import java.util.Map;
import net.minecraft.client.util.GlAllocationUtils;
import net.minecraft.util.Util;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.lwjgl.opengl.ARBDebugOutput;
import org.lwjgl.opengl.GL;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GLCapabilities;
import org.lwjgl.opengl.GLDebugMessageARBCallback;
import org.lwjgl.opengl.GLDebugMessageCallback;
import org.lwjgl.opengl.KHRDebug;

public class class_4219 {
	private static final Logger field_20705 = LogManager.getLogger();
	protected static final ByteBuffer field_20702 = GlAllocationUtils.allocateByteBuffer(64);
	protected static final FloatBuffer field_20703 = field_20702.asFloatBuffer();
	protected static final IntBuffer field_20704 = field_20702.asIntBuffer();
	private static final Joiner field_20706 = Joiner.on('\n');
	private static final Joiner field_20707 = Joiner.on("; ");
	private static final Map<Integer, String> field_20708 = Maps.newHashMap();
	private static final List<Integer> field_20709 = ImmutableList.of(37190, 37191, 37192, 33387);
	private static final List<Integer> field_20710 = ImmutableList.of(37190, 37191, 37192);
	private static final Map<String, List<String>> field_20711 = Maps.newHashMap();

	private static String method_19103(int i) {
		return "Unknown (0x" + Integer.toHexString(i).toUpperCase() + ")";
	}

	private static String method_19104(int i) {
		switch (i) {
			case 33350:
				return "API";
			case 33351:
				return "WINDOW SYSTEM";
			case 33352:
				return "SHADER COMPILER";
			case 33353:
				return "THIRD PARTY";
			case 33354:
				return "APPLICATION";
			case 33355:
				return "OTHER";
			default:
				return method_19103(i);
		}
	}

	private static String method_19105(int i) {
		switch (i) {
			case 33356:
				return "ERROR";
			case 33357:
				return "DEPRECATED BEHAVIOR";
			case 33358:
				return "UNDEFINED BEHAVIOR";
			case 33359:
				return "PORTABILITY";
			case 33360:
				return "PERFORMANCE";
			case 33361:
				return "OTHER";
			case 33384:
				return "MARKER";
			default:
				return method_19103(i);
		}
	}

	private static String method_19106(int i) {
		switch (i) {
			case 33387:
				return "NOTIFICATION";
			case 37190:
				return "HIGH";
			case 37191:
				return "MEDIUM";
			case 37192:
				return "LOW";
			default:
				return method_19103(i);
		}
	}

	private static void method_19099(int i, int j, int k, int l, int m, long n, long o) {
		field_20705.info(
			"OpenGL debug message, id={}, source={}, type={}, severity={}, message={}",
			k,
			method_19104(i),
			method_19105(j),
			method_19106(l),
			GLDebugMessageCallback.getMessage(m, n)
		);
	}

	private static void method_19100(int i, String string) {
		field_20708.merge(i, string, (stringx, string2) -> stringx + "/" + string2);
	}

	public static void method_19101(int i) {
		if (i > 0) {
			GLCapabilities gLCapabilities = GL.getCapabilities();
			if (gLCapabilities.GL_KHR_debug) {
				GL11.glEnable(37600);

				for (int j = 0; j < field_20709.size(); j++) {
					boolean bl = j < i;
					KHRDebug.glDebugMessageControl(4352, 4352, (Integer)field_20709.get(j), (int[])null, bl);
				}

				KHRDebug.glDebugMessageCallback(Util.make(GLDebugMessageCallback.create(class_4219::method_19099), class_4105::method_18148), 0L);
			} else if (gLCapabilities.GL_ARB_debug_output) {
				for (int k = 0; k < field_20710.size(); k++) {
					boolean bl2 = k < i;
					ARBDebugOutput.glDebugMessageControlARB(4352, 4352, (Integer)field_20710.get(k), (int[])null, bl2);
				}

				ARBDebugOutput.glDebugMessageCallbackARB(Util.make(GLDebugMessageARBCallback.create(class_4219::method_19099), class_4105::method_18148), 0L);
			}
		}
	}

	static {
		method_19100(256, "GL11.GL_ACCUM");
		method_19100(257, "GL11.GL_LOAD");
		method_19100(258, "GL11.GL_RETURN");
		method_19100(259, "GL11.GL_MULT");
		method_19100(260, "GL11.GL_ADD");
		method_19100(512, "GL11.GL_NEVER");
		method_19100(513, "GL11.GL_LESS");
		method_19100(514, "GL11.GL_EQUAL");
		method_19100(515, "GL11.GL_LEQUAL");
		method_19100(516, "GL11.GL_GREATER");
		method_19100(517, "GL11.GL_NOTEQUAL");
		method_19100(518, "GL11.GL_GEQUAL");
		method_19100(519, "GL11.GL_ALWAYS");
		method_19100(0, "GL11.GL_POINTS");
		method_19100(1, "GL11.GL_LINES");
		method_19100(2, "GL11.GL_LINE_LOOP");
		method_19100(3, "GL11.GL_LINE_STRIP");
		method_19100(4, "GL11.GL_TRIANGLES");
		method_19100(5, "GL11.GL_TRIANGLE_STRIP");
		method_19100(6, "GL11.GL_TRIANGLE_FAN");
		method_19100(7, "GL11.GL_QUADS");
		method_19100(8, "GL11.GL_QUAD_STRIP");
		method_19100(9, "GL11.GL_POLYGON");
		method_19100(0, "GL11.GL_ZERO");
		method_19100(1, "GL11.GL_ONE");
		method_19100(768, "GL11.GL_SRC_COLOR");
		method_19100(769, "GL11.GL_ONE_MINUS_SRC_COLOR");
		method_19100(770, "GL11.GL_SRC_ALPHA");
		method_19100(771, "GL11.GL_ONE_MINUS_SRC_ALPHA");
		method_19100(772, "GL11.GL_DST_ALPHA");
		method_19100(773, "GL11.GL_ONE_MINUS_DST_ALPHA");
		method_19100(774, "GL11.GL_DST_COLOR");
		method_19100(775, "GL11.GL_ONE_MINUS_DST_COLOR");
		method_19100(776, "GL11.GL_SRC_ALPHA_SATURATE");
		method_19100(32769, "GL14.GL_CONSTANT_COLOR");
		method_19100(32770, "GL14.GL_ONE_MINUS_CONSTANT_COLOR");
		method_19100(32771, "GL14.GL_CONSTANT_ALPHA");
		method_19100(32772, "GL14.GL_ONE_MINUS_CONSTANT_ALPHA");
		method_19100(1, "GL11.GL_TRUE");
		method_19100(0, "GL11.GL_FALSE");
		method_19100(12288, "GL11.GL_CLIP_PLANE0");
		method_19100(12289, "GL11.GL_CLIP_PLANE1");
		method_19100(12290, "GL11.GL_CLIP_PLANE2");
		method_19100(12291, "GL11.GL_CLIP_PLANE3");
		method_19100(12292, "GL11.GL_CLIP_PLANE4");
		method_19100(12293, "GL11.GL_CLIP_PLANE5");
		method_19100(5120, "GL11.GL_BYTE");
		method_19100(5121, "GL11.GL_UNSIGNED_BYTE");
		method_19100(5122, "GL11.GL_SHORT");
		method_19100(5123, "GL11.GL_UNSIGNED_SHORT");
		method_19100(5124, "GL11.GL_INT");
		method_19100(5125, "GL11.GL_UNSIGNED_INT");
		method_19100(5126, "GL11.GL_FLOAT");
		method_19100(5127, "GL11.GL_2_BYTES");
		method_19100(5128, "GL11.GL_3_BYTES");
		method_19100(5129, "GL11.GL_4_BYTES");
		method_19100(5130, "GL11.GL_DOUBLE");
		method_19100(0, "GL11.GL_NONE");
		method_19100(1024, "GL11.GL_FRONT_LEFT");
		method_19100(1025, "GL11.GL_FRONT_RIGHT");
		method_19100(1026, "GL11.GL_BACK_LEFT");
		method_19100(1027, "GL11.GL_BACK_RIGHT");
		method_19100(1028, "GL11.GL_FRONT");
		method_19100(1029, "GL11.GL_BACK");
		method_19100(1030, "GL11.GL_LEFT");
		method_19100(1031, "GL11.GL_RIGHT");
		method_19100(1032, "GL11.GL_FRONT_AND_BACK");
		method_19100(1033, "GL11.GL_AUX0");
		method_19100(1034, "GL11.GL_AUX1");
		method_19100(1035, "GL11.GL_AUX2");
		method_19100(1036, "GL11.GL_AUX3");
		method_19100(0, "GL11.GL_NO_ERROR");
		method_19100(1280, "GL11.GL_INVALID_ENUM");
		method_19100(1281, "GL11.GL_INVALID_VALUE");
		method_19100(1282, "GL11.GL_INVALID_OPERATION");
		method_19100(1283, "GL11.GL_STACK_OVERFLOW");
		method_19100(1284, "GL11.GL_STACK_UNDERFLOW");
		method_19100(1285, "GL11.GL_OUT_OF_MEMORY");
		method_19100(1536, "GL11.GL_2D");
		method_19100(1537, "GL11.GL_3D");
		method_19100(1538, "GL11.GL_3D_COLOR");
		method_19100(1539, "GL11.GL_3D_COLOR_TEXTURE");
		method_19100(1540, "GL11.GL_4D_COLOR_TEXTURE");
		method_19100(1792, "GL11.GL_PASS_THROUGH_TOKEN");
		method_19100(1793, "GL11.GL_POINT_TOKEN");
		method_19100(1794, "GL11.GL_LINE_TOKEN");
		method_19100(1795, "GL11.GL_POLYGON_TOKEN");
		method_19100(1796, "GL11.GL_BITMAP_TOKEN");
		method_19100(1797, "GL11.GL_DRAW_PIXEL_TOKEN");
		method_19100(1798, "GL11.GL_COPY_PIXEL_TOKEN");
		method_19100(1799, "GL11.GL_LINE_RESET_TOKEN");
		method_19100(2048, "GL11.GL_EXP");
		method_19100(2049, "GL11.GL_EXP2");
		method_19100(2304, "GL11.GL_CW");
		method_19100(2305, "GL11.GL_CCW");
		method_19100(2560, "GL11.GL_COEFF");
		method_19100(2561, "GL11.GL_ORDER");
		method_19100(2562, "GL11.GL_DOMAIN");
		method_19100(2816, "GL11.GL_CURRENT_COLOR");
		method_19100(2817, "GL11.GL_CURRENT_INDEX");
		method_19100(2818, "GL11.GL_CURRENT_NORMAL");
		method_19100(2819, "GL11.GL_CURRENT_TEXTURE_COORDS");
		method_19100(2820, "GL11.GL_CURRENT_RASTER_COLOR");
		method_19100(2821, "GL11.GL_CURRENT_RASTER_INDEX");
		method_19100(2822, "GL11.GL_CURRENT_RASTER_TEXTURE_COORDS");
		method_19100(2823, "GL11.GL_CURRENT_RASTER_POSITION");
		method_19100(2824, "GL11.GL_CURRENT_RASTER_POSITION_VALID");
		method_19100(2825, "GL11.GL_CURRENT_RASTER_DISTANCE");
		method_19100(2832, "GL11.GL_POINT_SMOOTH");
		method_19100(2833, "GL11.GL_POINT_SIZE");
		method_19100(2834, "GL11.GL_POINT_SIZE_RANGE");
		method_19100(2835, "GL11.GL_POINT_SIZE_GRANULARITY");
		method_19100(2848, "GL11.GL_LINE_SMOOTH");
		method_19100(2849, "GL11.GL_LINE_WIDTH");
		method_19100(2850, "GL11.GL_LINE_WIDTH_RANGE");
		method_19100(2851, "GL11.GL_LINE_WIDTH_GRANULARITY");
		method_19100(2852, "GL11.GL_LINE_STIPPLE");
		method_19100(2853, "GL11.GL_LINE_STIPPLE_PATTERN");
		method_19100(2854, "GL11.GL_LINE_STIPPLE_REPEAT");
		method_19100(2864, "GL11.GL_LIST_MODE");
		method_19100(2865, "GL11.GL_MAX_LIST_NESTING");
		method_19100(2866, "GL11.GL_LIST_BASE");
		method_19100(2867, "GL11.GL_LIST_INDEX");
		method_19100(2880, "GL11.GL_POLYGON_MODE");
		method_19100(2881, "GL11.GL_POLYGON_SMOOTH");
		method_19100(2882, "GL11.GL_POLYGON_STIPPLE");
		method_19100(2883, "GL11.GL_EDGE_FLAG");
		method_19100(2884, "GL11.GL_CULL_FACE");
		method_19100(2885, "GL11.GL_CULL_FACE_MODE");
		method_19100(2886, "GL11.GL_FRONT_FACE");
		method_19100(2896, "GL11.GL_LIGHTING");
		method_19100(2897, "GL11.GL_LIGHT_MODEL_LOCAL_VIEWER");
		method_19100(2898, "GL11.GL_LIGHT_MODEL_TWO_SIDE");
		method_19100(2899, "GL11.GL_LIGHT_MODEL_AMBIENT");
		method_19100(2900, "GL11.GL_SHADE_MODEL");
		method_19100(2901, "GL11.GL_COLOR_MATERIAL_FACE");
		method_19100(2902, "GL11.GL_COLOR_MATERIAL_PARAMETER");
		method_19100(2903, "GL11.GL_COLOR_MATERIAL");
		method_19100(2912, "GL11.GL_FOG");
		method_19100(2913, "GL11.GL_FOG_INDEX");
		method_19100(2914, "GL11.GL_FOG_DENSITY");
		method_19100(2915, "GL11.GL_FOG_START");
		method_19100(2916, "GL11.GL_FOG_END");
		method_19100(2917, "GL11.GL_FOG_MODE");
		method_19100(2918, "GL11.GL_FOG_COLOR");
		method_19100(2928, "GL11.GL_DEPTH_RANGE");
		method_19100(2929, "GL11.GL_DEPTH_TEST");
		method_19100(2930, "GL11.GL_DEPTH_WRITEMASK");
		method_19100(2931, "GL11.GL_DEPTH_CLEAR_VALUE");
		method_19100(2932, "GL11.GL_DEPTH_FUNC");
		method_19100(2944, "GL11.GL_ACCUM_CLEAR_VALUE");
		method_19100(2960, "GL11.GL_STENCIL_TEST");
		method_19100(2961, "GL11.GL_STENCIL_CLEAR_VALUE");
		method_19100(2962, "GL11.GL_STENCIL_FUNC");
		method_19100(2963, "GL11.GL_STENCIL_VALUE_MASK");
		method_19100(2964, "GL11.GL_STENCIL_FAIL");
		method_19100(2965, "GL11.GL_STENCIL_PASS_DEPTH_FAIL");
		method_19100(2966, "GL11.GL_STENCIL_PASS_DEPTH_PASS");
		method_19100(2967, "GL11.GL_STENCIL_REF");
		method_19100(2968, "GL11.GL_STENCIL_WRITEMASK");
		method_19100(2976, "GL11.GL_MATRIX_MODE");
		method_19100(2977, "GL11.GL_NORMALIZE");
		method_19100(2978, "GL11.GL_VIEWPORT");
		method_19100(2979, "GL11.GL_MODELVIEW_STACK_DEPTH");
		method_19100(2980, "GL11.GL_PROJECTION_STACK_DEPTH");
		method_19100(2981, "GL11.GL_TEXTURE_STACK_DEPTH");
		method_19100(2982, "GL11.GL_MODELVIEW_MATRIX");
		method_19100(2983, "GL11.GL_PROJECTION_MATRIX");
		method_19100(2984, "GL11.GL_TEXTURE_MATRIX");
		method_19100(2992, "GL11.GL_ATTRIB_STACK_DEPTH");
		method_19100(2993, "GL11.GL_CLIENT_ATTRIB_STACK_DEPTH");
		method_19100(3008, "GL11.GL_ALPHA_TEST");
		method_19100(3009, "GL11.GL_ALPHA_TEST_FUNC");
		method_19100(3010, "GL11.GL_ALPHA_TEST_REF");
		method_19100(3024, "GL11.GL_DITHER");
		method_19100(3040, "GL11.GL_BLEND_DST");
		method_19100(3041, "GL11.GL_BLEND_SRC");
		method_19100(3042, "GL11.GL_BLEND");
		method_19100(3056, "GL11.GL_LOGIC_OP_MODE");
		method_19100(3057, "GL11.GL_INDEX_LOGIC_OP");
		method_19100(3058, "GL11.GL_COLOR_LOGIC_OP");
		method_19100(3072, "GL11.GL_AUX_BUFFERS");
		method_19100(3073, "GL11.GL_DRAW_BUFFER");
		method_19100(3074, "GL11.GL_READ_BUFFER");
		method_19100(3088, "GL11.GL_SCISSOR_BOX");
		method_19100(3089, "GL11.GL_SCISSOR_TEST");
		method_19100(3104, "GL11.GL_INDEX_CLEAR_VALUE");
		method_19100(3105, "GL11.GL_INDEX_WRITEMASK");
		method_19100(3106, "GL11.GL_COLOR_CLEAR_VALUE");
		method_19100(3107, "GL11.GL_COLOR_WRITEMASK");
		method_19100(3120, "GL11.GL_INDEX_MODE");
		method_19100(3121, "GL11.GL_RGBA_MODE");
		method_19100(3122, "GL11.GL_DOUBLEBUFFER");
		method_19100(3123, "GL11.GL_STEREO");
		method_19100(3136, "GL11.GL_RENDER_MODE");
		method_19100(3152, "GL11.GL_PERSPECTIVE_CORRECTION_HINT");
		method_19100(3153, "GL11.GL_POINT_SMOOTH_HINT");
		method_19100(3154, "GL11.GL_LINE_SMOOTH_HINT");
		method_19100(3155, "GL11.GL_POLYGON_SMOOTH_HINT");
		method_19100(3156, "GL11.GL_FOG_HINT");
		method_19100(3168, "GL11.GL_TEXTURE_GEN_S");
		method_19100(3169, "GL11.GL_TEXTURE_GEN_T");
		method_19100(3170, "GL11.GL_TEXTURE_GEN_R");
		method_19100(3171, "GL11.GL_TEXTURE_GEN_Q");
		method_19100(3184, "GL11.GL_PIXEL_MAP_I_TO_I");
		method_19100(3185, "GL11.GL_PIXEL_MAP_S_TO_S");
		method_19100(3186, "GL11.GL_PIXEL_MAP_I_TO_R");
		method_19100(3187, "GL11.GL_PIXEL_MAP_I_TO_G");
		method_19100(3188, "GL11.GL_PIXEL_MAP_I_TO_B");
		method_19100(3189, "GL11.GL_PIXEL_MAP_I_TO_A");
		method_19100(3190, "GL11.GL_PIXEL_MAP_R_TO_R");
		method_19100(3191, "GL11.GL_PIXEL_MAP_G_TO_G");
		method_19100(3192, "GL11.GL_PIXEL_MAP_B_TO_B");
		method_19100(3193, "GL11.GL_PIXEL_MAP_A_TO_A");
		method_19100(3248, "GL11.GL_PIXEL_MAP_I_TO_I_SIZE");
		method_19100(3249, "GL11.GL_PIXEL_MAP_S_TO_S_SIZE");
		method_19100(3250, "GL11.GL_PIXEL_MAP_I_TO_R_SIZE");
		method_19100(3251, "GL11.GL_PIXEL_MAP_I_TO_G_SIZE");
		method_19100(3252, "GL11.GL_PIXEL_MAP_I_TO_B_SIZE");
		method_19100(3253, "GL11.GL_PIXEL_MAP_I_TO_A_SIZE");
		method_19100(3254, "GL11.GL_PIXEL_MAP_R_TO_R_SIZE");
		method_19100(3255, "GL11.GL_PIXEL_MAP_G_TO_G_SIZE");
		method_19100(3256, "GL11.GL_PIXEL_MAP_B_TO_B_SIZE");
		method_19100(3257, "GL11.GL_PIXEL_MAP_A_TO_A_SIZE");
		method_19100(3312, "GL11.GL_UNPACK_SWAP_BYTES");
		method_19100(3313, "GL11.GL_UNPACK_LSB_FIRST");
		method_19100(3314, "GL11.GL_UNPACK_ROW_LENGTH");
		method_19100(3315, "GL11.GL_UNPACK_SKIP_ROWS");
		method_19100(3316, "GL11.GL_UNPACK_SKIP_PIXELS");
		method_19100(3317, "GL11.GL_UNPACK_ALIGNMENT");
		method_19100(3328, "GL11.GL_PACK_SWAP_BYTES");
		method_19100(3329, "GL11.GL_PACK_LSB_FIRST");
		method_19100(3330, "GL11.GL_PACK_ROW_LENGTH");
		method_19100(3331, "GL11.GL_PACK_SKIP_ROWS");
		method_19100(3332, "GL11.GL_PACK_SKIP_PIXELS");
		method_19100(3333, "GL11.GL_PACK_ALIGNMENT");
		method_19100(3344, "GL11.GL_MAP_COLOR");
		method_19100(3345, "GL11.GL_MAP_STENCIL");
		method_19100(3346, "GL11.GL_INDEX_SHIFT");
		method_19100(3347, "GL11.GL_INDEX_OFFSET");
		method_19100(3348, "GL11.GL_RED_SCALE");
		method_19100(3349, "GL11.GL_RED_BIAS");
		method_19100(3350, "GL11.GL_ZOOM_X");
		method_19100(3351, "GL11.GL_ZOOM_Y");
		method_19100(3352, "GL11.GL_GREEN_SCALE");
		method_19100(3353, "GL11.GL_GREEN_BIAS");
		method_19100(3354, "GL11.GL_BLUE_SCALE");
		method_19100(3355, "GL11.GL_BLUE_BIAS");
		method_19100(3356, "GL11.GL_ALPHA_SCALE");
		method_19100(3357, "GL11.GL_ALPHA_BIAS");
		method_19100(3358, "GL11.GL_DEPTH_SCALE");
		method_19100(3359, "GL11.GL_DEPTH_BIAS");
		method_19100(3376, "GL11.GL_MAX_EVAL_ORDER");
		method_19100(3377, "GL11.GL_MAX_LIGHTS");
		method_19100(3378, "GL11.GL_MAX_CLIP_PLANES");
		method_19100(3379, "GL11.GL_MAX_TEXTURE_SIZE");
		method_19100(3380, "GL11.GL_MAX_PIXEL_MAP_TABLE");
		method_19100(3381, "GL11.GL_MAX_ATTRIB_STACK_DEPTH");
		method_19100(3382, "GL11.GL_MAX_MODELVIEW_STACK_DEPTH");
		method_19100(3383, "GL11.GL_MAX_NAME_STACK_DEPTH");
		method_19100(3384, "GL11.GL_MAX_PROJECTION_STACK_DEPTH");
		method_19100(3385, "GL11.GL_MAX_TEXTURE_STACK_DEPTH");
		method_19100(3386, "GL11.GL_MAX_VIEWPORT_DIMS");
		method_19100(3387, "GL11.GL_MAX_CLIENT_ATTRIB_STACK_DEPTH");
		method_19100(3408, "GL11.GL_SUBPIXEL_BITS");
		method_19100(3409, "GL11.GL_INDEX_BITS");
		method_19100(3410, "GL11.GL_RED_BITS");
		method_19100(3411, "GL11.GL_GREEN_BITS");
		method_19100(3412, "GL11.GL_BLUE_BITS");
		method_19100(3413, "GL11.GL_ALPHA_BITS");
		method_19100(3414, "GL11.GL_DEPTH_BITS");
		method_19100(3415, "GL11.GL_STENCIL_BITS");
		method_19100(3416, "GL11.GL_ACCUM_RED_BITS");
		method_19100(3417, "GL11.GL_ACCUM_GREEN_BITS");
		method_19100(3418, "GL11.GL_ACCUM_BLUE_BITS");
		method_19100(3419, "GL11.GL_ACCUM_ALPHA_BITS");
		method_19100(3440, "GL11.GL_NAME_STACK_DEPTH");
		method_19100(3456, "GL11.GL_AUTO_NORMAL");
		method_19100(3472, "GL11.GL_MAP1_COLOR_4");
		method_19100(3473, "GL11.GL_MAP1_INDEX");
		method_19100(3474, "GL11.GL_MAP1_NORMAL");
		method_19100(3475, "GL11.GL_MAP1_TEXTURE_COORD_1");
		method_19100(3476, "GL11.GL_MAP1_TEXTURE_COORD_2");
		method_19100(3477, "GL11.GL_MAP1_TEXTURE_COORD_3");
		method_19100(3478, "GL11.GL_MAP1_TEXTURE_COORD_4");
		method_19100(3479, "GL11.GL_MAP1_VERTEX_3");
		method_19100(3480, "GL11.GL_MAP1_VERTEX_4");
		method_19100(3504, "GL11.GL_MAP2_COLOR_4");
		method_19100(3505, "GL11.GL_MAP2_INDEX");
		method_19100(3506, "GL11.GL_MAP2_NORMAL");
		method_19100(3507, "GL11.GL_MAP2_TEXTURE_COORD_1");
		method_19100(3508, "GL11.GL_MAP2_TEXTURE_COORD_2");
		method_19100(3509, "GL11.GL_MAP2_TEXTURE_COORD_3");
		method_19100(3510, "GL11.GL_MAP2_TEXTURE_COORD_4");
		method_19100(3511, "GL11.GL_MAP2_VERTEX_3");
		method_19100(3512, "GL11.GL_MAP2_VERTEX_4");
		method_19100(3536, "GL11.GL_MAP1_GRID_DOMAIN");
		method_19100(3537, "GL11.GL_MAP1_GRID_SEGMENTS");
		method_19100(3538, "GL11.GL_MAP2_GRID_DOMAIN");
		method_19100(3539, "GL11.GL_MAP2_GRID_SEGMENTS");
		method_19100(3552, "GL11.GL_TEXTURE_1D");
		method_19100(3553, "GL11.GL_TEXTURE_2D");
		method_19100(3568, "GL11.GL_FEEDBACK_BUFFER_POINTER");
		method_19100(3569, "GL11.GL_FEEDBACK_BUFFER_SIZE");
		method_19100(3570, "GL11.GL_FEEDBACK_BUFFER_TYPE");
		method_19100(3571, "GL11.GL_SELECTION_BUFFER_POINTER");
		method_19100(3572, "GL11.GL_SELECTION_BUFFER_SIZE");
		method_19100(4096, "GL11.GL_TEXTURE_WIDTH");
		method_19100(4097, "GL11.GL_TEXTURE_HEIGHT");
		method_19100(4099, "GL11.GL_TEXTURE_INTERNAL_FORMAT");
		method_19100(4100, "GL11.GL_TEXTURE_BORDER_COLOR");
		method_19100(4101, "GL11.GL_TEXTURE_BORDER");
		method_19100(4352, "GL11.GL_DONT_CARE");
		method_19100(4353, "GL11.GL_FASTEST");
		method_19100(4354, "GL11.GL_NICEST");
		method_19100(16384, "GL11.GL_LIGHT0");
		method_19100(16385, "GL11.GL_LIGHT1");
		method_19100(16386, "GL11.GL_LIGHT2");
		method_19100(16387, "GL11.GL_LIGHT3");
		method_19100(16388, "GL11.GL_LIGHT4");
		method_19100(16389, "GL11.GL_LIGHT5");
		method_19100(16390, "GL11.GL_LIGHT6");
		method_19100(16391, "GL11.GL_LIGHT7");
		method_19100(4608, "GL11.GL_AMBIENT");
		method_19100(4609, "GL11.GL_DIFFUSE");
		method_19100(4610, "GL11.GL_SPECULAR");
		method_19100(4611, "GL11.GL_POSITION");
		method_19100(4612, "GL11.GL_SPOT_DIRECTION");
		method_19100(4613, "GL11.GL_SPOT_EXPONENT");
		method_19100(4614, "GL11.GL_SPOT_CUTOFF");
		method_19100(4615, "GL11.GL_CONSTANT_ATTENUATION");
		method_19100(4616, "GL11.GL_LINEAR_ATTENUATION");
		method_19100(4617, "GL11.GL_QUADRATIC_ATTENUATION");
		method_19100(4864, "GL11.GL_COMPILE");
		method_19100(4865, "GL11.GL_COMPILE_AND_EXECUTE");
		method_19100(5376, "GL11.GL_CLEAR");
		method_19100(5377, "GL11.GL_AND");
		method_19100(5378, "GL11.GL_AND_REVERSE");
		method_19100(5379, "GL11.GL_COPY");
		method_19100(5380, "GL11.GL_AND_INVERTED");
		method_19100(5381, "GL11.GL_NOOP");
		method_19100(5382, "GL11.GL_XOR");
		method_19100(5383, "GL11.GL_OR");
		method_19100(5384, "GL11.GL_NOR");
		method_19100(5385, "GL11.GL_EQUIV");
		method_19100(5386, "GL11.GL_INVERT");
		method_19100(5387, "GL11.GL_OR_REVERSE");
		method_19100(5388, "GL11.GL_COPY_INVERTED");
		method_19100(5389, "GL11.GL_OR_INVERTED");
		method_19100(5390, "GL11.GL_NAND");
		method_19100(5391, "GL11.GL_SET");
		method_19100(5632, "GL11.GL_EMISSION");
		method_19100(5633, "GL11.GL_SHININESS");
		method_19100(5634, "GL11.GL_AMBIENT_AND_DIFFUSE");
		method_19100(5635, "GL11.GL_COLOR_INDEXES");
		method_19100(5888, "GL11.GL_MODELVIEW");
		method_19100(5889, "GL11.GL_PROJECTION");
		method_19100(5890, "GL11.GL_TEXTURE");
		method_19100(6144, "GL11.GL_COLOR");
		method_19100(6145, "GL11.GL_DEPTH");
		method_19100(6146, "GL11.GL_STENCIL");
		method_19100(6400, "GL11.GL_COLOR_INDEX");
		method_19100(6401, "GL11.GL_STENCIL_INDEX");
		method_19100(6402, "GL11.GL_DEPTH_COMPONENT");
		method_19100(6403, "GL11.GL_RED");
		method_19100(6404, "GL11.GL_GREEN");
		method_19100(6405, "GL11.GL_BLUE");
		method_19100(6406, "GL11.GL_ALPHA");
		method_19100(6407, "GL11.GL_RGB");
		method_19100(6408, "GL11.GL_RGBA");
		method_19100(6409, "GL11.GL_LUMINANCE");
		method_19100(6410, "GL11.GL_LUMINANCE_ALPHA");
		method_19100(6656, "GL11.GL_BITMAP");
		method_19100(6912, "GL11.GL_POINT");
		method_19100(6913, "GL11.GL_LINE");
		method_19100(6914, "GL11.GL_FILL");
		method_19100(7168, "GL11.GL_RENDER");
		method_19100(7169, "GL11.GL_FEEDBACK");
		method_19100(7170, "GL11.GL_SELECT");
		method_19100(7424, "GL11.GL_FLAT");
		method_19100(7425, "GL11.GL_SMOOTH");
		method_19100(7680, "GL11.GL_KEEP");
		method_19100(7681, "GL11.GL_REPLACE");
		method_19100(7682, "GL11.GL_INCR");
		method_19100(7683, "GL11.GL_DECR");
		method_19100(7936, "GL11.GL_VENDOR");
		method_19100(7937, "GL11.GL_RENDERER");
		method_19100(7938, "GL11.GL_VERSION");
		method_19100(7939, "GL11.GL_EXTENSIONS");
		method_19100(8192, "GL11.GL_S");
		method_19100(8193, "GL11.GL_T");
		method_19100(8194, "GL11.GL_R");
		method_19100(8195, "GL11.GL_Q");
		method_19100(8448, "GL11.GL_MODULATE");
		method_19100(8449, "GL11.GL_DECAL");
		method_19100(8704, "GL11.GL_TEXTURE_ENV_MODE");
		method_19100(8705, "GL11.GL_TEXTURE_ENV_COLOR");
		method_19100(8960, "GL11.GL_TEXTURE_ENV");
		method_19100(9216, "GL11.GL_EYE_LINEAR");
		method_19100(9217, "GL11.GL_OBJECT_LINEAR");
		method_19100(9218, "GL11.GL_SPHERE_MAP");
		method_19100(9472, "GL11.GL_TEXTURE_GEN_MODE");
		method_19100(9473, "GL11.GL_OBJECT_PLANE");
		method_19100(9474, "GL11.GL_EYE_PLANE");
		method_19100(9728, "GL11.GL_NEAREST");
		method_19100(9729, "GL11.GL_LINEAR");
		method_19100(9984, "GL11.GL_NEAREST_MIPMAP_NEAREST");
		method_19100(9985, "GL11.GL_LINEAR_MIPMAP_NEAREST");
		method_19100(9986, "GL11.GL_NEAREST_MIPMAP_LINEAR");
		method_19100(9987, "GL11.GL_LINEAR_MIPMAP_LINEAR");
		method_19100(10240, "GL11.GL_TEXTURE_MAG_FILTER");
		method_19100(10241, "GL11.GL_TEXTURE_MIN_FILTER");
		method_19100(10242, "GL11.GL_TEXTURE_WRAP_S");
		method_19100(10243, "GL11.GL_TEXTURE_WRAP_T");
		method_19100(10496, "GL11.GL_CLAMP");
		method_19100(10497, "GL11.GL_REPEAT");
		method_19100(-1, "GL11.GL_ALL_CLIENT_ATTRIB_BITS");
		method_19100(32824, "GL11.GL_POLYGON_OFFSET_FACTOR");
		method_19100(10752, "GL11.GL_POLYGON_OFFSET_UNITS");
		method_19100(10753, "GL11.GL_POLYGON_OFFSET_POINT");
		method_19100(10754, "GL11.GL_POLYGON_OFFSET_LINE");
		method_19100(32823, "GL11.GL_POLYGON_OFFSET_FILL");
		method_19100(32827, "GL11.GL_ALPHA4");
		method_19100(32828, "GL11.GL_ALPHA8");
		method_19100(32829, "GL11.GL_ALPHA12");
		method_19100(32830, "GL11.GL_ALPHA16");
		method_19100(32831, "GL11.GL_LUMINANCE4");
		method_19100(32832, "GL11.GL_LUMINANCE8");
		method_19100(32833, "GL11.GL_LUMINANCE12");
		method_19100(32834, "GL11.GL_LUMINANCE16");
		method_19100(32835, "GL11.GL_LUMINANCE4_ALPHA4");
		method_19100(32836, "GL11.GL_LUMINANCE6_ALPHA2");
		method_19100(32837, "GL11.GL_LUMINANCE8_ALPHA8");
		method_19100(32838, "GL11.GL_LUMINANCE12_ALPHA4");
		method_19100(32839, "GL11.GL_LUMINANCE12_ALPHA12");
		method_19100(32840, "GL11.GL_LUMINANCE16_ALPHA16");
		method_19100(32841, "GL11.GL_INTENSITY");
		method_19100(32842, "GL11.GL_INTENSITY4");
		method_19100(32843, "GL11.GL_INTENSITY8");
		method_19100(32844, "GL11.GL_INTENSITY12");
		method_19100(32845, "GL11.GL_INTENSITY16");
		method_19100(10768, "GL11.GL_R3_G3_B2");
		method_19100(32847, "GL11.GL_RGB4");
		method_19100(32848, "GL11.GL_RGB5");
		method_19100(32849, "GL11.GL_RGB8");
		method_19100(32850, "GL11.GL_RGB10");
		method_19100(32851, "GL11.GL_RGB12");
		method_19100(32852, "GL11.GL_RGB16");
		method_19100(32853, "GL11.GL_RGBA2");
		method_19100(32854, "GL11.GL_RGBA4");
		method_19100(32855, "GL11.GL_RGB5_A1");
		method_19100(32856, "GL11.GL_RGBA8");
		method_19100(32857, "GL11.GL_RGB10_A2");
		method_19100(32858, "GL11.GL_RGBA12");
		method_19100(32859, "GL11.GL_RGBA16");
		method_19100(32860, "GL11.GL_TEXTURE_RED_SIZE");
		method_19100(32861, "GL11.GL_TEXTURE_GREEN_SIZE");
		method_19100(32862, "GL11.GL_TEXTURE_BLUE_SIZE");
		method_19100(32863, "GL11.GL_TEXTURE_ALPHA_SIZE");
		method_19100(32864, "GL11.GL_TEXTURE_LUMINANCE_SIZE");
		method_19100(32865, "GL11.GL_TEXTURE_INTENSITY_SIZE");
		method_19100(32867, "GL11.GL_PROXY_TEXTURE_1D");
		method_19100(32868, "GL11.GL_PROXY_TEXTURE_2D");
		method_19100(32870, "GL11.GL_TEXTURE_PRIORITY");
		method_19100(32871, "GL11.GL_TEXTURE_RESIDENT");
		method_19100(32872, "GL11.GL_TEXTURE_BINDING_1D");
		method_19100(32873, "GL11.GL_TEXTURE_BINDING_2D");
		method_19100(32884, "GL11.GL_VERTEX_ARRAY");
		method_19100(32885, "GL11.GL_NORMAL_ARRAY");
		method_19100(32886, "GL11.GL_COLOR_ARRAY");
		method_19100(32887, "GL11.GL_INDEX_ARRAY");
		method_19100(32888, "GL11.GL_TEXTURE_COORD_ARRAY");
		method_19100(32889, "GL11.GL_EDGE_FLAG_ARRAY");
		method_19100(32890, "GL11.GL_VERTEX_ARRAY_SIZE");
		method_19100(32891, "GL11.GL_VERTEX_ARRAY_TYPE");
		method_19100(32892, "GL11.GL_VERTEX_ARRAY_STRIDE");
		method_19100(32894, "GL11.GL_NORMAL_ARRAY_TYPE");
		method_19100(32895, "GL11.GL_NORMAL_ARRAY_STRIDE");
		method_19100(32897, "GL11.GL_COLOR_ARRAY_SIZE");
		method_19100(32898, "GL11.GL_COLOR_ARRAY_TYPE");
		method_19100(32899, "GL11.GL_COLOR_ARRAY_STRIDE");
		method_19100(32901, "GL11.GL_INDEX_ARRAY_TYPE");
		method_19100(32902, "GL11.GL_INDEX_ARRAY_STRIDE");
		method_19100(32904, "GL11.GL_TEXTURE_COORD_ARRAY_SIZE");
		method_19100(32905, "GL11.GL_TEXTURE_COORD_ARRAY_TYPE");
		method_19100(32906, "GL11.GL_TEXTURE_COORD_ARRAY_STRIDE");
		method_19100(32908, "GL11.GL_EDGE_FLAG_ARRAY_STRIDE");
		method_19100(32910, "GL11.GL_VERTEX_ARRAY_POINTER");
		method_19100(32911, "GL11.GL_NORMAL_ARRAY_POINTER");
		method_19100(32912, "GL11.GL_COLOR_ARRAY_POINTER");
		method_19100(32913, "GL11.GL_INDEX_ARRAY_POINTER");
		method_19100(32914, "GL11.GL_TEXTURE_COORD_ARRAY_POINTER");
		method_19100(32915, "GL11.GL_EDGE_FLAG_ARRAY_POINTER");
		method_19100(10784, "GL11.GL_V2F");
		method_19100(10785, "GL11.GL_V3F");
		method_19100(10786, "GL11.GL_C4UB_V2F");
		method_19100(10787, "GL11.GL_C4UB_V3F");
		method_19100(10788, "GL11.GL_C3F_V3F");
		method_19100(10789, "GL11.GL_N3F_V3F");
		method_19100(10790, "GL11.GL_C4F_N3F_V3F");
		method_19100(10791, "GL11.GL_T2F_V3F");
		method_19100(10792, "GL11.GL_T4F_V4F");
		method_19100(10793, "GL11.GL_T2F_C4UB_V3F");
		method_19100(10794, "GL11.GL_T2F_C3F_V3F");
		method_19100(10795, "GL11.GL_T2F_N3F_V3F");
		method_19100(10796, "GL11.GL_T2F_C4F_N3F_V3F");
		method_19100(10797, "GL11.GL_T4F_C4F_N3F_V4F");
		method_19100(3057, "GL11.GL_LOGIC_OP");
		method_19100(4099, "GL11.GL_TEXTURE_COMPONENTS");
		method_19100(32874, "GL12.GL_TEXTURE_BINDING_3D");
		method_19100(32875, "GL12.GL_PACK_SKIP_IMAGES");
		method_19100(32876, "GL12.GL_PACK_IMAGE_HEIGHT");
		method_19100(32877, "GL12.GL_UNPACK_SKIP_IMAGES");
		method_19100(32878, "GL12.GL_UNPACK_IMAGE_HEIGHT");
		method_19100(32879, "GL12.GL_TEXTURE_3D");
		method_19100(32880, "GL12.GL_PROXY_TEXTURE_3D");
		method_19100(32881, "GL12.GL_TEXTURE_DEPTH");
		method_19100(32882, "GL12.GL_TEXTURE_WRAP_R");
		method_19100(32883, "GL12.GL_MAX_3D_TEXTURE_SIZE");
		method_19100(32992, "GL12.GL_BGR");
		method_19100(32993, "GL12.GL_BGRA");
		method_19100(32818, "GL12.GL_UNSIGNED_BYTE_3_3_2");
		method_19100(33634, "GL12.GL_UNSIGNED_BYTE_2_3_3_REV");
		method_19100(33635, "GL12.GL_UNSIGNED_SHORT_5_6_5");
		method_19100(33636, "GL12.GL_UNSIGNED_SHORT_5_6_5_REV");
		method_19100(32819, "GL12.GL_UNSIGNED_SHORT_4_4_4_4");
		method_19100(33637, "GL12.GL_UNSIGNED_SHORT_4_4_4_4_REV");
		method_19100(32820, "GL12.GL_UNSIGNED_SHORT_5_5_5_1");
		method_19100(33638, "GL12.GL_UNSIGNED_SHORT_1_5_5_5_REV");
		method_19100(32821, "GL12.GL_UNSIGNED_INT_8_8_8_8");
		method_19100(33639, "GL12.GL_UNSIGNED_INT_8_8_8_8_REV");
		method_19100(32822, "GL12.GL_UNSIGNED_INT_10_10_10_2");
		method_19100(33640, "GL12.GL_UNSIGNED_INT_2_10_10_10_REV");
		method_19100(32826, "GL12.GL_RESCALE_NORMAL");
		method_19100(33272, "GL12.GL_LIGHT_MODEL_COLOR_CONTROL");
		method_19100(33273, "GL12.GL_SINGLE_COLOR");
		method_19100(33274, "GL12.GL_SEPARATE_SPECULAR_COLOR");
		method_19100(33071, "GL12.GL_CLAMP_TO_EDGE");
		method_19100(33082, "GL12.GL_TEXTURE_MIN_LOD");
		method_19100(33083, "GL12.GL_TEXTURE_MAX_LOD");
		method_19100(33084, "GL12.GL_TEXTURE_BASE_LEVEL");
		method_19100(33085, "GL12.GL_TEXTURE_MAX_LEVEL");
		method_19100(33000, "GL12.GL_MAX_ELEMENTS_VERTICES");
		method_19100(33001, "GL12.GL_MAX_ELEMENTS_INDICES");
		method_19100(33901, "GL12.GL_ALIASED_POINT_SIZE_RANGE");
		method_19100(33902, "GL12.GL_ALIASED_LINE_WIDTH_RANGE");
		method_19100(33984, "GL13.GL_TEXTURE0");
		method_19100(33985, "GL13.GL_TEXTURE1");
		method_19100(33986, "GL13.GL_TEXTURE2");
		method_19100(33987, "GL13.GL_TEXTURE3");
		method_19100(33988, "GL13.GL_TEXTURE4");
		method_19100(33989, "GL13.GL_TEXTURE5");
		method_19100(33990, "GL13.GL_TEXTURE6");
		method_19100(33991, "GL13.GL_TEXTURE7");
		method_19100(33992, "GL13.GL_TEXTURE8");
		method_19100(33993, "GL13.GL_TEXTURE9");
		method_19100(33994, "GL13.GL_TEXTURE10");
		method_19100(33995, "GL13.GL_TEXTURE11");
		method_19100(33996, "GL13.GL_TEXTURE12");
		method_19100(33997, "GL13.GL_TEXTURE13");
		method_19100(33998, "GL13.GL_TEXTURE14");
		method_19100(33999, "GL13.GL_TEXTURE15");
		method_19100(34000, "GL13.GL_TEXTURE16");
		method_19100(34001, "GL13.GL_TEXTURE17");
		method_19100(34002, "GL13.GL_TEXTURE18");
		method_19100(34003, "GL13.GL_TEXTURE19");
		method_19100(34004, "GL13.GL_TEXTURE20");
		method_19100(34005, "GL13.GL_TEXTURE21");
		method_19100(34006, "GL13.GL_TEXTURE22");
		method_19100(34007, "GL13.GL_TEXTURE23");
		method_19100(34008, "GL13.GL_TEXTURE24");
		method_19100(34009, "GL13.GL_TEXTURE25");
		method_19100(34010, "GL13.GL_TEXTURE26");
		method_19100(34011, "GL13.GL_TEXTURE27");
		method_19100(34012, "GL13.GL_TEXTURE28");
		method_19100(34013, "GL13.GL_TEXTURE29");
		method_19100(34014, "GL13.GL_TEXTURE30");
		method_19100(34015, "GL13.GL_TEXTURE31");
		method_19100(34016, "GL13.GL_ACTIVE_TEXTURE");
		method_19100(34017, "GL13.GL_CLIENT_ACTIVE_TEXTURE");
		method_19100(34018, "GL13.GL_MAX_TEXTURE_UNITS");
		method_19100(34065, "GL13.GL_NORMAL_MAP");
		method_19100(34066, "GL13.GL_REFLECTION_MAP");
		method_19100(34067, "GL13.GL_TEXTURE_CUBE_MAP");
		method_19100(34068, "GL13.GL_TEXTURE_BINDING_CUBE_MAP");
		method_19100(34069, "GL13.GL_TEXTURE_CUBE_MAP_POSITIVE_X");
		method_19100(34070, "GL13.GL_TEXTURE_CUBE_MAP_NEGATIVE_X");
		method_19100(34071, "GL13.GL_TEXTURE_CUBE_MAP_POSITIVE_Y");
		method_19100(34072, "GL13.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y");
		method_19100(34073, "GL13.GL_TEXTURE_CUBE_MAP_POSITIVE_Z");
		method_19100(34074, "GL13.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z");
		method_19100(34075, "GL13.GL_PROXY_TEXTURE_CUBE_MAP");
		method_19100(34076, "GL13.GL_MAX_CUBE_MAP_TEXTURE_SIZE");
		method_19100(34025, "GL13.GL_COMPRESSED_ALPHA");
		method_19100(34026, "GL13.GL_COMPRESSED_LUMINANCE");
		method_19100(34027, "GL13.GL_COMPRESSED_LUMINANCE_ALPHA");
		method_19100(34028, "GL13.GL_COMPRESSED_INTENSITY");
		method_19100(34029, "GL13.GL_COMPRESSED_RGB");
		method_19100(34030, "GL13.GL_COMPRESSED_RGBA");
		method_19100(34031, "GL13.GL_TEXTURE_COMPRESSION_HINT");
		method_19100(34464, "GL13.GL_TEXTURE_COMPRESSED_IMAGE_SIZE");
		method_19100(34465, "GL13.GL_TEXTURE_COMPRESSED");
		method_19100(34466, "GL13.GL_NUM_COMPRESSED_TEXTURE_FORMATS");
		method_19100(34467, "GL13.GL_COMPRESSED_TEXTURE_FORMATS");
		method_19100(32925, "GL13.GL_MULTISAMPLE");
		method_19100(32926, "GL13.GL_SAMPLE_ALPHA_TO_COVERAGE");
		method_19100(32927, "GL13.GL_SAMPLE_ALPHA_TO_ONE");
		method_19100(32928, "GL13.GL_SAMPLE_COVERAGE");
		method_19100(32936, "GL13.GL_SAMPLE_BUFFERS");
		method_19100(32937, "GL13.GL_SAMPLES");
		method_19100(32938, "GL13.GL_SAMPLE_COVERAGE_VALUE");
		method_19100(32939, "GL13.GL_SAMPLE_COVERAGE_INVERT");
		method_19100(34019, "GL13.GL_TRANSPOSE_MODELVIEW_MATRIX");
		method_19100(34020, "GL13.GL_TRANSPOSE_PROJECTION_MATRIX");
		method_19100(34021, "GL13.GL_TRANSPOSE_TEXTURE_MATRIX");
		method_19100(34022, "GL13.GL_TRANSPOSE_COLOR_MATRIX");
		method_19100(34160, "GL13.GL_COMBINE");
		method_19100(34161, "GL13.GL_COMBINE_RGB");
		method_19100(34162, "GL13.GL_COMBINE_ALPHA");
		method_19100(34176, "GL13.GL_SOURCE0_RGB");
		method_19100(34177, "GL13.GL_SOURCE1_RGB");
		method_19100(34178, "GL13.GL_SOURCE2_RGB");
		method_19100(34184, "GL13.GL_SOURCE0_ALPHA");
		method_19100(34185, "GL13.GL_SOURCE1_ALPHA");
		method_19100(34186, "GL13.GL_SOURCE2_ALPHA");
		method_19100(34192, "GL13.GL_OPERAND0_RGB");
		method_19100(34193, "GL13.GL_OPERAND1_RGB");
		method_19100(34194, "GL13.GL_OPERAND2_RGB");
		method_19100(34200, "GL13.GL_OPERAND0_ALPHA");
		method_19100(34201, "GL13.GL_OPERAND1_ALPHA");
		method_19100(34202, "GL13.GL_OPERAND2_ALPHA");
		method_19100(34163, "GL13.GL_RGB_SCALE");
		method_19100(34164, "GL13.GL_ADD_SIGNED");
		method_19100(34165, "GL13.GL_INTERPOLATE");
		method_19100(34023, "GL13.GL_SUBTRACT");
		method_19100(34166, "GL13.GL_CONSTANT");
		method_19100(34167, "GL13.GL_PRIMARY_COLOR");
		method_19100(34168, "GL13.GL_PREVIOUS");
		method_19100(34478, "GL13.GL_DOT3_RGB");
		method_19100(34479, "GL13.GL_DOT3_RGBA");
		method_19100(33069, "GL13.GL_CLAMP_TO_BORDER");
		method_19100(33169, "GL14.GL_GENERATE_MIPMAP");
		method_19100(33170, "GL14.GL_GENERATE_MIPMAP_HINT");
		method_19100(33189, "GL14.GL_DEPTH_COMPONENT16");
		method_19100(33190, "GL14.GL_DEPTH_COMPONENT24");
		method_19100(33191, "GL14.GL_DEPTH_COMPONENT32");
		method_19100(34890, "GL14.GL_TEXTURE_DEPTH_SIZE");
		method_19100(34891, "GL14.GL_DEPTH_TEXTURE_MODE");
		method_19100(34892, "GL14.GL_TEXTURE_COMPARE_MODE");
		method_19100(34893, "GL14.GL_TEXTURE_COMPARE_FUNC");
		method_19100(34894, "GL14.GL_COMPARE_R_TO_TEXTURE");
		method_19100(33872, "GL14.GL_FOG_COORDINATE_SOURCE");
		method_19100(33873, "GL14.GL_FOG_COORDINATE");
		method_19100(33874, "GL14.GL_FRAGMENT_DEPTH");
		method_19100(33875, "GL14.GL_CURRENT_FOG_COORDINATE");
		method_19100(33876, "GL14.GL_FOG_COORDINATE_ARRAY_TYPE");
		method_19100(33877, "GL14.GL_FOG_COORDINATE_ARRAY_STRIDE");
		method_19100(33878, "GL14.GL_FOG_COORDINATE_ARRAY_POINTER");
		method_19100(33879, "GL14.GL_FOG_COORDINATE_ARRAY");
		method_19100(33062, "GL14.GL_POINT_SIZE_MIN");
		method_19100(33063, "GL14.GL_POINT_SIZE_MAX");
		method_19100(33064, "GL14.GL_POINT_FADE_THRESHOLD_SIZE");
		method_19100(33065, "GL14.GL_POINT_DISTANCE_ATTENUATION");
		method_19100(33880, "GL14.GL_COLOR_SUM");
		method_19100(33881, "GL14.GL_CURRENT_SECONDARY_COLOR");
		method_19100(33882, "GL14.GL_SECONDARY_COLOR_ARRAY_SIZE");
		method_19100(33883, "GL14.GL_SECONDARY_COLOR_ARRAY_TYPE");
		method_19100(33884, "GL14.GL_SECONDARY_COLOR_ARRAY_STRIDE");
		method_19100(33885, "GL14.GL_SECONDARY_COLOR_ARRAY_POINTER");
		method_19100(33886, "GL14.GL_SECONDARY_COLOR_ARRAY");
		method_19100(32968, "GL14.GL_BLEND_DST_RGB");
		method_19100(32969, "GL14.GL_BLEND_SRC_RGB");
		method_19100(32970, "GL14.GL_BLEND_DST_ALPHA");
		method_19100(32971, "GL14.GL_BLEND_SRC_ALPHA");
		method_19100(34055, "GL14.GL_INCR_WRAP");
		method_19100(34056, "GL14.GL_DECR_WRAP");
		method_19100(34048, "GL14.GL_TEXTURE_FILTER_CONTROL");
		method_19100(34049, "GL14.GL_TEXTURE_LOD_BIAS");
		method_19100(34045, "GL14.GL_MAX_TEXTURE_LOD_BIAS");
		method_19100(33648, "GL14.GL_MIRRORED_REPEAT");
		method_19100(32773, "ARBImaging.GL_BLEND_COLOR");
		method_19100(32777, "ARBImaging.GL_BLEND_EQUATION");
		method_19100(32774, "GL14.GL_FUNC_ADD");
		method_19100(32778, "GL14.GL_FUNC_SUBTRACT");
		method_19100(32779, "GL14.GL_FUNC_REVERSE_SUBTRACT");
		method_19100(32775, "GL14.GL_MIN");
		method_19100(32776, "GL14.GL_MAX");
		method_19100(34962, "GL15.GL_ARRAY_BUFFER");
		method_19100(34963, "GL15.GL_ELEMENT_ARRAY_BUFFER");
		method_19100(34964, "GL15.GL_ARRAY_BUFFER_BINDING");
		method_19100(34965, "GL15.GL_ELEMENT_ARRAY_BUFFER_BINDING");
		method_19100(34966, "GL15.GL_VERTEX_ARRAY_BUFFER_BINDING");
		method_19100(34967, "GL15.GL_NORMAL_ARRAY_BUFFER_BINDING");
		method_19100(34968, "GL15.GL_COLOR_ARRAY_BUFFER_BINDING");
		method_19100(34969, "GL15.GL_INDEX_ARRAY_BUFFER_BINDING");
		method_19100(34970, "GL15.GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING");
		method_19100(34971, "GL15.GL_EDGE_FLAG_ARRAY_BUFFER_BINDING");
		method_19100(34972, "GL15.GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING");
		method_19100(34973, "GL15.GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING");
		method_19100(34974, "GL15.GL_WEIGHT_ARRAY_BUFFER_BINDING");
		method_19100(34975, "GL15.GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
		method_19100(35040, "GL15.GL_STREAM_DRAW");
		method_19100(35041, "GL15.GL_STREAM_READ");
		method_19100(35042, "GL15.GL_STREAM_COPY");
		method_19100(35044, "GL15.GL_STATIC_DRAW");
		method_19100(35045, "GL15.GL_STATIC_READ");
		method_19100(35046, "GL15.GL_STATIC_COPY");
		method_19100(35048, "GL15.GL_DYNAMIC_DRAW");
		method_19100(35049, "GL15.GL_DYNAMIC_READ");
		method_19100(35050, "GL15.GL_DYNAMIC_COPY");
		method_19100(35000, "GL15.GL_READ_ONLY");
		method_19100(35001, "GL15.GL_WRITE_ONLY");
		method_19100(35002, "GL15.GL_READ_WRITE");
		method_19100(34660, "GL15.GL_BUFFER_SIZE");
		method_19100(34661, "GL15.GL_BUFFER_USAGE");
		method_19100(35003, "GL15.GL_BUFFER_ACCESS");
		method_19100(35004, "GL15.GL_BUFFER_MAPPED");
		method_19100(35005, "GL15.GL_BUFFER_MAP_POINTER");
		method_19100(34138, "NVFogDistance.GL_FOG_DISTANCE_MODE_NV");
		method_19100(34139, "NVFogDistance.GL_EYE_RADIAL_NV");
		method_19100(34140, "NVFogDistance.GL_EYE_PLANE_ABSOLUTE_NV");
	}
}
